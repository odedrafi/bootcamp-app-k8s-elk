name: build_$(Date:yyyyMMdd)$(Rev:r)

trigger:
- main

stages:

# Continuous Integration Process
- stage: CI
  jobs:
  - job: BuildAndPushContainer
    pool:
      name: BuildPool 
    workspace: 
      clean: all
    steps:

    - task: Docker@2
      inputs:
        containerRegistry: 'acr'
        command: 'login'
    - task: Docker@2
      inputs:
        containerRegistry: 'acr'
        repository: 'myrepo'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'

# Continuous Deployment Process for Staging Environment
- stage: DeployToStaging
  
  jobs:
  - deployment: production
    displayName: Deploy to aks
    pool:
      name: BuildPool     
    environment: aks
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            inputs:
              action: 'createSecret'
              kubernetesServiceConnection: 'aks'
              namespace: 'default'
              secretType: 'generic'
              secretName: 'secrets'
              secretArguments: '--from-literal=HOST=0.0.0.0 --from-literal=PORT=8080 --from-literal=COOKIE_ENCRYPT_PWD=$(COOKIE_ENCRYPT_PWD) --from-literal=HOST_URL=$(HOST_URL) --from-literal=OKTA_CLIENT_ID=$(OKTA_CLIENT_ID) --from-literal=OKTA_CLIENT_SECRET=$(OKTA_CLIENT_SECRET) --from-literal=OKTA_ORG_URL=$(OKTA_ORG_URL) --from-literal=PGHOST=$(PG_HOST) --from-literal=PGUSERNAME=$(PG_USER) --from-literal=PGDATABASE=$(PG_USER) --from-literal=PGPASSWORD=$(PG_PASS) --from-literal=PGPORT=$(5432)'
          - task: KubernetesManifest@0
            inputs:
              action: 'deploy'
              kubernetesServiceConnection: 'aks'
              namespace: 'default'
              manifests: 'kubernates/manifests/ingress.yaml'
              
              


#Continuous Delivery Process for Production Environment
